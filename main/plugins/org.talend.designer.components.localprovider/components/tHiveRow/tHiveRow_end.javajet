<%@ jet 
imports="
			org.talend.core.model.process.INode 
			org.talend.core.model.process.ElementParameterParser 
			org.talend.designer.codegen.config.CodeGeneratorArgument
		"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
	String cid = node.getUniqueName();
	String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
	String commitEvery = "0"; ElementParameterParser.getValue(node, "__COMMIT_EVERY__");
	boolean usePrepareStatement = "true".equals(ElementParameterParser.getValue(node,"__USE_PREPAREDSTATEMENT__"));
	
	boolean isExecutedThroughWebHCat = "MICROSOFT_HD_INSIGHT".equals(ElementParameterParser.getValue(node, "__DISTRIBUTION__"));
	if("true".equals(ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__"))) {
		isExecutedThroughWebHCat = false;
		String connection = ElementParameterParser.getValue(node, "__CONNECTION__");
		for (INode pNode : node.getProcess().getNodesOfType("tHiveConnection")) {
			if(connection!=null && connection.equals(pNode.getUniqueName())) {
				isExecutedThroughWebHCat = "MICROSOFT_HD_INSIGHT".equals(ElementParameterParser.getValue(pNode, "__DISTRIBUTION__"));
			}
		}
	}

	if(!isExecutedThroughWebHCat) {
		if (usePrepareStatement) {
%>
			pstmt_<%=cid %>.close();	
<%
		} else {
%>
			stmt_<%=cid %>.close();	
<%
		}
		if(!("true").equals(useExistingConn)) {
	    	if(!("").equals(commitEvery) && !("0").equals(commitEvery)) {
            %>
            if(commitEvery_<%=cid%> > commitCounter_<%=cid%>) {
            
					<%if(isLog4jEnabled){%>
						log.info("<%=cid%> - Starting to commit.");
					<%}%>
	            	conn_<%=cid%>.commit();
					<%if(isLog4jEnabled){%>
						log.info("<%=cid%> - Commit has succeeded.");
					<%}%>
            	
            	commitCounter_<%=cid%> = 0;
            	
            }
            <%
			}
    		%>
			<%if(isLog4jEnabled){%>
				log.info("<%=cid%> - Closing the connection to the database.");
			<%}%>
	    	conn_<%=cid %> .close();
			<%if(isLog4jEnabled){%>
				log.info("<%=cid%> - Connection to the database closed.");
			<%}%>
	    	<%
		}
		%>
		
		<%if(isLog4jEnabled){%>
			log.info("<%=cid%> - Done.");
		<%}%>

		String currentClientPathSeparator_<%=cid%> = (String)globalMap.get("current_client_path_separator");
		if(currentClientPathSeparator_<%=cid%>!=null) {
			System.setProperty("path.separator", currentClientPathSeparator_<%=cid%>);
			globalMap.put("current_client_path_separator", null);
		}
		
		String currentClientUsername_<%=cid%> = (String)globalMap.get("current_client_user_name");
		if(currentClientUsername_<%=cid%>!=null) {
			System.setProperty("user.name", currentClientUsername_<%=cid%>);
			globalMap.put("current_client_user_name", null);
		}
		
		String originalHadoopUsername_<%=cid%> = (String)globalMap.get("HADOOP_USER_NAME_<%=cid%>");
		if(originalHadoopUsername_<%=cid%>!=null) {
			System.setProperty("HADOOP_USER_NAME", originalHadoopUsername_<%=cid%>);
			globalMap.put("HADOOP_USER_NAME_<%=cid%>", null);
		} else {
			System.clearProperty("HADOOP_USER_NAME");
		}
<%
	}
%>